// connection string
"Host=localhost;Database=mtcgdb;Username=admin;Password=1234"

// starting the docker
docker start mtcgdb

// open bash
sudo docker exec -it mtcgdb bash

// run psql
 psql -U admin

 // change to the correct database (since im clearly incapable)
 \c mtcgdb

// sql commands
CREATE TABLE IF NOT EXISTS users (
	id SERIAL PRIMARY KEY,
	username VARCHAR(20) UNIQUE NOT NULL,
	password VARCHAR(255) NOT NULL,
	coins int,
	elo int,
	wins int,
	losses int
);

CREATE TABLE IF NOT EXISTS cards (
	id varchar(128) UNIQUE PRIMARY KEY,
	name varchar(32),
	damage double precision,
	element int,
	cardtype int
);

CREATE TABLE IF NOT EXISTS stack (
    id varchar(128) UNIQUE PRIMARY KEY,
	name varchar(32),
	damage double precision,
	element int,
	cardtype int,
	owner varchar(20) REFERENCES users(username)
);

CREATE TABLE IF NOT EXISTS deck (
    id varchar(128) references stack(id)
	owner varchar(20)
);

CREATE TABLE IF NOT EXISTS userprofile (
	username varchar(20) PRIMARY KEY REFERENCES users(username),
	displayname varchar(50),
	bio varchar(250),
	image varchar(50)
);

CREATE TABLE IF NOT EXISTS trading (
	id varchar(128) UNIQUE PRIMARY KEY,
	cardid varchar(128) UNIQUE references stack(id),
	username varchar(20),
	cardtype int,
	damage int
);

// infos on cards
element is saved as an integer bc the program is using an enum
	fire = 0
	water = 1
	normal = 2
card type as well
	monster = 0
	spell = 1

// commands to fill the cards table in
INSERT INTO cards (name, element, damage, cardtype) VALUES ('Dragon', 0, 70, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('FireElf',0, 25, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('FireGoblin', 0, 45, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('FireTroll', 0, 85, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('WaterElf', 1, 60, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('WaterGoblin', 1, 15, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('WaterTroll', 1, 35, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('Kraken', 1, 70, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('Wizard', 1, 50, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('RegularElf', 2, 90, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('RegularGoblin', 2, 25, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('RegularTroll', 2, 80, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('Knight', 2, 45, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('Ork', 2, 55, 0);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('FireSpell', 0, 75, 1);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('WaterSpell', 1, 20, 1);
INSERT INTO cards (name, element, damage, cardtype) VALUES ('RegularSpell', 2, 55, 1);



INSERT INTO stack VALUES (1, 'FireElf', 10, 0, 0, 'kienboec');
INSERT INTO stack VALUES (2, 'WaterElf', 10, 1, 0, 'kienboec');
INSERT INTO stack VALUES (3, 'RegularElf', 10, 2, 0, 'kienboec');
INSERT INTO stack VALUES (4, 'ElectricElf', 10, 3, 0, 'kienboec');
INSERT INTO stack VALUES (5, 'GrassElf', 10, 4, 0, 'kienboec');
INSERT INTO stack VALUES (6, 'IceElf', 10, 5, 0, 'kienboec');
INSERT INTO stack VALUES (7, 'FireSpell', 10, 0, 1, 'kienboec');
INSERT INTO stack VALUES (8, 'WaterSpell', 10, 1, 1, 'kienboec');
INSERT INTO stack VALUES (9, 'RegularSpell', 10, 2, 1, 'kienboec');
INSERT INTO stack VALUES (10, 'ElectricSpell', 10, 3, 1, 'kienboec');
INSERT INTO stack VALUES (11, 'GrassSpell', 10, 4, 1, 'kienboec');
INSERT INTO stack VALUES (12, 'IceSpell', 10, 5, 1, 'kienboec');
INSERT INTO stack VALUES (13, 'Curse', 10, 6, 2, 'kienboec');
INSERT INTO stack VALUES (14, 'FireElf', 10, 0, 0, 'altenhof');
INSERT INTO stack VALUES (15, 'WaterElf', 10, 1, 0, 'altenhof');
INSERT INTO stack VALUES (16, 'RegularElf', 10, 2, 0, 'altenhof');
INSERT INTO stack VALUES (17, 'ElectricElf', 10, 3, 0, 'altenhof');
INSERT INTO stack VALUES (18, 'GrassElf', 10, 4, 0, 'altenhof');
INSERT INTO stack VALUES (19, 'IceElf', 10, 5, 0, 'altenhof');
INSERT INTO stack VALUES (20, 'FireSpell', 10, 0, 1, 'altenhof');
INSERT INTO stack VALUES (21, 'WaterSpell', 10, 1, 1, 'altenhof');
INSERT INTO stack VALUES (22, 'RegularSpell', 10, 2, 1, 'altenhof');
INSERT INTO stack VALUES (23, 'ElectricSpell', 10, 3, 1, 'altenhof');
INSERT INTO stack VALUES (24, 'GrassSpell', 10, 4, 1, 'altenhof');
INSERT INTO stack VALUES (25, 'IceSpell', 10, 5, 1, 'altenhof');
INSERT INTO stack VALUES (26, 'Curse', 10, 6, 2, 'altenhof');

INSERT INTO deck (id, owner) VALUES (14, 'altenhof');
INSERT INTO deck (id, owner) VALUES (15, 'altenhof');
INSERT INTO deck (id, owner) VALUES (16, 'altenhof');
INSERT INTO deck (id, owner) VALUES (17, 'altenhof');
INSERT INTO deck (id, owner) VALUES (18, 'altenhof');
INSERT INTO deck (id, owner) VALUES (19, 'altenhof');
INSERT INTO deck (id, owner) VALUES (20, 'altenhof');
INSERT INTO deck (id, owner) VALUES (21, 'altenhof');
INSERT INTO deck (id, owner) VALUES (22, 'altenhof');
INSERT INTO deck (id, owner) VALUES (23, 'altenhof');
INSERT INTO deck (id, owner) VALUES (24, 'altenhof');
INSERT INTO deck (id, owner) VALUES (25, 'altenhof');
INSERT INTO deck (id, owner) VALUES (26, 'altenhof');
INSERT INTO deck (id, owner) VALUES (14, 'altenhof');
INSERT INTO deck (id, owner) VALUES (15, 'altenhof');
INSERT INTO deck (id, owner) VALUES (16, 'altenhof');
INSERT INTO deck (id, owner) VALUES (17, 'altenhof');
INSERT INTO deck (id, owner) VALUES (18, 'altenhof');
INSERT INTO deck (id, owner) VALUES (19, 'altenhof');
INSERT INTO deck (id, owner) VALUES (20, 'altenhof');
INSERT INTO deck (id, owner) VALUES (21, 'altenhof');
INSERT INTO deck (id, owner) VALUES (22, 'altenhof');
INSERT INTO deck (id, owner) VALUES (23, 'altenhof');
INSERT INTO deck (id, owner) VALUES (24, 'altenhof');
INSERT INTO deck (id, owner) VALUES (25, 'altenhof');
INSERT INTO deck (id, owner) VALUES (26, 'altenhof');
